@model FlockStudy.Models.ViewModels.PrayerDashboardViewModel
@{
    ViewData["Title"] = "Prayer Dashboard";
}

<div class="mobile-padding mx-auto max-w-7xl p-4 sm:p-6 lg:p-8">
    <header class="glass-header mb-8 rounded-2xl p-6 shadow-sm">
        <div class="flex items-center justify-between">
            <!-- Title -->
            <div class="text-left">
                <h1 class="bg-clip-text text-3xl font-bold text-gray-900">
                    Prayer Dashboard
                </h1>
                <p class="mt-1 text-sm text-gray-600 sm:text-base">Connect through prayer, strengthen through community</p>
            </div>

            <!-- Mobile toggle -->
            <div class="sm:hidden">
                <button onclick="toggleMobileMenu()" class="rounded-md bg-orange-500 p-2 text-white">
                    <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                        <rect x="3" y="6" width="18" height="2" fill="currentColor" />
                        <rect x="3" y="11" width="18" height="2" fill="currentColor" />
                        <rect x="3" y="16" width="18" height="2" fill="currentColor" />
                    </svg>

                </button>
            </div>

            <div class="hidden flex-row gap-3 sm:flex">
                <a asp-controller="prayer" asp-action="create"
                   class="group inline-flex items-center gap-2 rounded-xl bg-orange-600 px-6 py-3 font-medium text-white shadow-lg transition-all hover:scale-105 hover:bg-orange-700">
         
                    <span>New Prayer Request</span>
                </a>

                <a asp-controller="account" asp-action="Profile"
                   class="group inline-flex items-center gap-2 rounded-xl bg-orange-400 px-6 py-3 font-medium text-white shadow-lg transition-all hover:scale-105 hover:bg-orange-500">
                    <svg class="h-5 w-5 transition-transform duration-300 group-hover:scale-110" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                              d="M5.121 17.804A9 9 0 1118.879 6.196 9 9 0 015.121 17.804zM15 11a3 3 0 11-6 0 3 3 0 016 0z" />
                    </svg>
                    <span>Profile</span>
                </a>

                <button type="button"
                        data-modal-target="logoutModal"
                        data-modal-toggle="logoutModal"
                        class="group inline-flex items-center gap-2 rounded-xl bg-gradient-to-r from-red-500 to-orange-500 px-4 py-3 font-medium text-white shadow-lg transition-all hover:scale-105 hover:shadow-xl">
                    <svg class="h-5 w-5 transition-transform duration-300 group-hover:translate-x-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 16l4-4m0 0l-4-4m4 4H7m6 4v1a3 3 0 01-3 3H6a3 3 0 01-3-3V7a3 3 0 013-3h4a3 3 0 013 3v1" />
                    </svg>
                </button>
            </div>
        </div>

        <!-- Mobile Menu - HIDDEN BY DEFAULT -->
        <div id="mobile-menu" class="mt-4 hidden flex-col gap-3 sm:hidden">
            <a asp-controller="prayer" asp-action="create"
               class="inline-flex items-center gap-2 rounded-xl bg-orange-600 px-6 py-3 font-medium text-white shadow-lg transition-all hover:scale-105 hover:bg-orange-700">
                <i class="fas fa-plus"></i>
                <span>New Prayer Request</span>
            </a>

            <a asp-controller="account" asp-action="Profile"
               class="inline-flex items-center gap-2 rounded-xl bg-orange-400 px-6 py-3 font-medium text-white shadow-lg transition-all hover:scale-105 hover:bg-orange-500">
                <span>Profile</span>
            </a>

            <button type="button"
                    data-modal-target="logoutModal"
                    data-modal-toggle="logoutModal"
                    class="inline-flex items-center gap-2 rounded-xl bg-gradient-to-r from-red-500 to-orange-500 px-4 py-3 font-medium text-white shadow-lg transition-all hover:scale-105 hover:shadow-xl">
                Logout
            </button>
        </div>
    </header>


    <!-- My Commitments This Week -->
    <section class="mb-12">
        <div class="mb-6 flex items-center gap-3">
    
            <h2 class="text-2xl font-bold text-gray-800">My Prayer Commitments This Week</h2>
        </div>

        @if (!Model.MyCommitments.Any())
        {
            <div class="glass-card rounded-2xl p-6 text-center">
                <div class="mx-auto mb-4 flex h-16 w-16 items-center justify-center rounded-full bg-gradient-to-r from-red-400 to-orange-500">
                    <i class="fas fa-heart text-xl text-white"></i>
                </div>
                <p class="font-medium text-gray-600">You haven't committed to any prayers this week.</p>
                <p class="mt-2 text-sm text-gray-500">Browse available requests below to start your prayer journey!</p>
            </div>
        }
        else
        {
            <div class="grid gap-6 sm:grid-cols-2 lg:grid-cols-3">
                @foreach (var request in Model.MyCommitments)
                {
                    <div class="@(request.IsCompletedThisWeek ? "commitment-completed" : "commitment-pending") group rounded-2xl p-6 shadow-lg transition-all hover:scale-105 hover:shadow-xl">
                        <div class="mb-4">
                            <h3 class="text-lg font-semibold text-gray-800">@request.Title</h3>
                            <p class="mt-2 text-sm leading-relaxed text-gray-600">@request.Description</p>
                        </div>

                        <div class="mb-4 text-xs text-gray-500">
                            <i class="fas fa-user mr-1"></i>
                            Requested by: @request.RequestedBy
                        </div>

                        <form method="post" action="/Home/MarkCompleted" class="inline w-full">
                            <input type="hidden" name="prayerRequestId" value="@request.Id" />
                            <button type="submit" class="@(request.IsCompletedThisWeek ? "inline-flex w-full items-center justify-center gap-2 rounded-xl bg-orange-500 px-4 py-3 font-medium text-white shadow-md transition-all hover:bg-orange-600 hover:shadow-lg" : "group/btn inline-flex w-full items-center justify-center gap-2 rounded-xl border-2 border-orange-500 px-4 py-3 font-medium text-orange-600 transition-all hover:bg-orange-500 hover:text-white hover:shadow-lg")">
                                <i class="fas @(request.IsCompletedThisWeek ? "fa-check-circle" : "fa-circle group-hover/btn:fa-check-circle transition-all")"></i>
                                <span>@(request.IsCompletedThisWeek ? "Prayed ✓" : "Mark as Prayed")</span>
                            </button>
                        </form>
                    </div>
                }
            </div>
        }
    </section>

    <!-- Available Prayer Requests -->
    <section class="mb-12">
        <div class="mb-6 flex items-center gap-3">
  
            <h2 class="text-2xl font-bold text-gray-800">Available Prayer Requests</h2>
        </div>

        @if (!Model.AvailableRequests.Any())
        {
            <div class="glass-card rounded-2xl p-6 text-center">
                <div class="mx-auto mb-4 flex h-16 w-16 items-center justify-center rounded-full bg-gradient-to-r from-orange-400 to-red-500">
                    <i class="fas fa-dove text-xl text-white"></i>
                </div>
                <p class="font-medium text-gray-600">No prayer requests available right now.</p>
                <p class="mt-2 text-sm text-gray-500">Check back later for new prayer opportunities.</p>
            </div>
        }
        else
        {
            <div class="grid gap-6 sm:grid-cols-2 lg:grid-cols-3">
                @foreach (var request in Model.AvailableRequests)
                {
                    <div class="glass-card group rounded-2xl p-6 shadow-lg transition-all hover:scale-105 hover:shadow-xl">


                        <div class="mb-4">
                            <h3 class="text-lg font-semibold text-gray-800">@request.Title</h3>

                            @{
                                int wordLimit = 30;
                                var words = request.Description.Split(' ');
                                var shortDescription = words.Length > wordLimit
                                ? string.Join(" ", words.Take(wordLimit)) + "..."
                                : request.Description;
                            }
                            <p class="mt-2 text-sm leading-relaxed text-gray-600">   @shortDescription</p>
                            @if (words.Length > wordLimit)
                            {
                                <a asp-action="Details" asp-controller="Prayer" asp-route-id="@request.Id" class="text-sm font-medium text-orange-600 hover:underline">
                                    Read more
                                </a>
                            }
                        </div>

            

                        <div class="mb-4 flex items-center gap-2 text-xs text-red-600">
                            <i class="fas fa-users"></i>
                            <span>@request.CommitmentCount people praying</span>
                        </div>

                        @if (!request.IsCommittedByCurrentUser)
                        {
                            <form method="post" action="/Home/CommitToPrayer" class="inline w-full">
                                <input type="hidden" name="prayerRequestId" value="@request.Id" />
                                <button type="submit" class="group/btn inline-flex w-full items-center justify-center gap-2 rounded-xl bg-orange-600 px-4 py-3 font-medium text-white shadow-md transition-all hover:scale-105 hover:shadow-lg">
                                    <i class="fas fa-hands-praying group-hover/btn:animate-pulse"></i>
                                    <span>Commit to Pray</span>
                                </button>
                            </form>
                        }
                        else
                        {
                            <div class="inline-flex w-full items-center justify-center gap-2 rounded-xl bg-orange-100 px-4 py-3 font-medium text-orange-700">
                                <i class="fas fa-check"></i>
                                <span>Already committed</span>
                            </div>
                        }
                    </div>
                }
            </div>
        }
    </section>

    <!-- My Prayer Requests -->
    <section class="mb-8">
        <div class="mb-6 flex items-center gap-3">
     
            <h2 class="text-2xl font-bold text-gray-800">My Prayer Requests</h2>
        </div>

        @if (!Model.MyRequests.Any())
        {
            <div class="glass-card rounded-2xl p-6 text-center">
                <div class="mx-auto mb-4 flex h-16 w-16 items-center justify-center rounded-full bg-gradient-to-r from-red-100 to-orange-500">
                    <i class="fas fa-plus text-xl text-white"></i>
                </div>
                <p class="font-medium text-gray-600">You haven't created any prayer requests yet.</p>
                <p class="mt-2 text-sm text-gray-500">Share your prayer needs with the community.</p>
            </div>
        }
        else
        {
            <div class="grid gap-6 sm:grid-cols-2 lg:grid-cols-3">
                @foreach (var request in Model.MyRequests)
                {
                    <div class="my-request-card group relative rounded-2xl p-6 shadow-lg transition-all hover:scale-105 hover:shadow-xl">
                        <div class="absolute right-4 top-4 flex gap-2 opacity-0 transition-all group-hover:opacity-100">
                            <!-- Edit -->
                            <a asp-action="Edit" asp-controller="Prayer" asp-route-id="@request.Id"
                               class="rounded-lg bg-white/80 p-2 text-red-600 shadow-md hover:bg-white hover:text-red-700"
                               title="Edit">
                                <svg class="h-4 w-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                          d="M15.232 5.232l3.536 3.536M9 13l6-6 3 3-6 6H9v-3z" />
                                </svg>
                            </a>


                            <button type="button"
                                    data-request-id="@request.Id"
                                    data-request-title="@request.Title"
                                    onclick="openDeleteModal(this.getAttribute('data-request-id'), this.getAttribute('data-request-title'))"
                                    class="rounded-lg bg-white/80 p-2 text-red-600 shadow-md hover:bg-white hover:text-red-700"
                                    title="Delete">
                                <svg class="h-4 w-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                          d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6M9 7h6m2 0H7m5-4v4" />
                                </svg>
                            </button>
                        </div>
                        <div class="mb-4">
                            <h3 class="text-lg font-semibold text-gray-800">@request.Title</h3>
                            <p class="mt-2 text-sm leading-relaxed text-gray-900">@request.Description</p>
                        </div>

                        <div class="flex items-center gap-2 text-sm font-medium text-orange-100">
                            <div class="rounded-full bg-orange-100 p-1">
                                <i class="fas fa-hands-praying text-xs"></i>
                            </div>
                            <span>@request.CommitmentCount people praying for this</span>
                        </div>
                    </div>
                }
            </div>
        }
    </section>
</div>
<!-- Delete Confirmation Modal -->
<div id="deleteModal" class="fixed inset-0 z-50 hidden items-center justify-center bg-black/50 backdrop-blur-sm">
    <div class="glass-card mx-4 w-full max-w-md scale-95 transform rounded-2xl bg-white p-6 opacity-0 shadow-xl transition-all" id="deleteModalContent">
        <div class="mb-4 flex items-center gap-3">
            <div class="rounded-full bg-red-100 p-2">
                <svg class="h-5 w-5 text-red-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                          d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6M9 7h6m2 0H7m5-4v4" />
                </svg>
            </div>
            <h2 class="text-lg font-semibold text-gray-800">Confirm Delete</h2>
        </div>

        <p class="mb-2 text-sm text-gray-600">Are you sure you want to delete this prayer request?</p>
        <p class="mb-6 text-sm font-medium text-gray-800" id="deleteRequestTitle"></p>

        <form id="deleteForm" method="post" class="flex justify-end gap-3">
            @Html.AntiForgeryToken()
            <input type="hidden" name="id" id="deleteRequestId" />

            <button type="button" onclick="closeDeleteModal()"
                    class="rounded-lg bg-gray-200 px-4 py-2 text-gray-700 transition-colors hover:bg-gray-300">
                Cancel
            </button>
            <button type="submit"
                    class="rounded-lg bg-red-600 px-4 py-2 text-white transition-colors hover:bg-red-700">
                Delete Request
            </button>
        </form>
    </div>
</div>
<script>
    function toggleMobileMenu() {
        const mobileMenu = document.getElementById('mobile-menu');

        if (mobileMenu.classList.contains('hidden')) {
            mobileMenu.classList.remove('hidden');
            mobileMenu.classList.add('flex');
        } else {
            mobileMenu.classList.add('hidden');
            mobileMenu.classList.remove('flex');
        }
    }
    function openDeleteModal(requestId, requestTitle) {
         // Debug log to see what we're getting
         console.log('Request ID:', requestId, 'Type:', typeof requestId);
         console.log('Request Title:', requestTitle);

         // Convert to integer to ensure it's a number
         const id = parseInt(requestId, 10);

         if (isNaN(id) || id <= 0) {
             console.error('Invalid request ID:', requestId);
             alert('Error: Invalid request ID');
             return;
         }

         // Set form data
         document.getElementById('deleteRequestId').value = id;
         document.getElementById('deleteRequestTitle').textContent = `"${requestTitle}"`;
         document.getElementById('deleteForm').action = '@Url.Action("Delete", "Prayer")';

         // Show modal with animation
         const modal = document.getElementById('deleteModal');
         const modalContent = document.getElementById('deleteModalContent');

         modal.classList.remove('hidden');
         modal.classList.add('flex');

         // Trigger animation
         setTimeout(() => {
             modalContent.classList.remove('scale-95', 'opacity-0');
             modalContent.classList.add('scale-100', 'opacity-100');
         }, 10);
     }

     function closeDeleteModal() {
         const modal = document.getElementById('deleteModal');
         const modalContent = document.getElementById('deleteModalContent');

         // Animate out
         modalContent.classList.remove('scale-100', 'opacity-100');
         modalContent.classList.add('scale-95', 'opacity-0');

         // Hide modal after animation
         setTimeout(() => {
             modal.classList.add('hidden');
             modal.classList.remove('flex');
         }, 150);
     }

     // Close modal when clicking outside
     document.getElementById('deleteModal').addEventListener('click', function(e) {
         if (e.target === this) {
             closeDeleteModal();
         }
     });

     // Close modal with Escape key
     document.addEventListener('keydown', function(e) {
         if (e.key === 'Escape') {
             const modal = document.getElementById('deleteModal');
             if (!modal.classList.contains('hidden')) {
                 closeDeleteModal();
             }
         }
     });
</script>